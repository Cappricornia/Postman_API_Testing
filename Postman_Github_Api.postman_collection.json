{
	"info": {
		"_postman_id": "3cb7a75c-6dd1-408b-81c4-9f423c23bb46d",
		"name": "Postman_Github_Api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "17589417"
	},
	"item": [
		{
			"name": "Issues",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "GET_Single_Issue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check status code\", function(){\r",
											"    pm.response.to.have.status(200);\r",
											"})\r",
											"\r",
											"pm.test(\"Check issue number\", function() {\r",
											"    const body = pm.response.json();\r",
											"\r",
											"    pm.expect(body.number, \"Number property\").to.be.equal(1);\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/dimosoftuni/postman/issues/1",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"dimosoftuni",
										"postman",
										"issues",
										"1"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET_Single_Issue_Label",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Status code is 200 second example\", function(){\r",
											"    // debug in console\r",
											"    console.log(\"RESPONSE\", pm.response);\r",
											"    // there are diffrent ways to write the assertions\r",
											"    pm.response.to.be.ok;\r",
											"    pm.expect(pm.response.code).equals(200);\r",
											"    pm.expect(pm.response.code).to.be.equal(200);\r",
											"    pm.expect(pm.response.code).to.be.equals(200);\r",
											"} )\r",
											"\r",
											"pm.test(\"Status check\", function(){\r",
											"    // in case of fail \"Status property\" message will clarify what is expected\r",
											"    pm.expect(pm.response.status, \"Status property\").equals(\"OK\");\r",
											"} )\r",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/dimosoftuni/postman/issues/1/labels",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"dimosoftuni",
										"postman",
										"issues",
										"1",
										"labels"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET_All_Issues",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check if response is an array of issues\", function () {\r",
											"    // parse to JSON\r",
											"    const body = pm.response.json();\r",
											"    console.log(\"BODY\", body);\r",
											"    pm.expect(Array.isArray(body));\r",
											"\r",
											"    for (let item of body) {\r",
											"        // check if title is a string\r",
											"        pm.expect(typeof(item.title)).equals(\"string\");\r",
											"        pm.expect(typeof(item.number)).equals(\"number\");\r",
											"        pm.expect(item.number, \"Issue Number property\").is.greaterThan(0);\r",
											"    }\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/dimosoftuni/postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"dimosoftuni",
										"postman",
										"issues"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "POST",
					"item": [
						{
							"name": "Create_Issue",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Check issue number\", function() {\r",
											"    let body = pm.response.json();\r",
											"\r",
											"    pm.expect(body.number, \"Number property\").greaterThan(0);\r",
											"    pm.expect(body.title, \"Title property\").equals(\"Create an issue from Postman\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "gbp_fgg54kfkdkdk43sfgg",
											"type": "string"
										},
										{
											"key": "username",
											"value": "capricornia",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\" : \"Create an issue from Postman\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.github.com/repos/dimosoftuni/postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"dimosoftuni",
										"postman",
										"issues"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create_Issue_With_Label",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "gbp_fgg54kfkdkdk43sfgg",
											"type": "string"
										},
										{
											"key": "username",
											"value": "capricornia",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\" : \"A new issue with labels\",\r\n    \"labels\" : [\"bug\", \"priority: critical\"]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.github.com/repos/dimosoftuni/postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"dimosoftuni",
										"postman",
										"issues"
									]
								}
							},
							"response": []
						},
						{
							"name": "Create_Issue_Missing_Title",
							"request": {
								"auth": {
									"type": "basic",
									"basic": [
										{
											"key": "password",
											"value": "gbp_fgg54kfkdkdk43sfgg",
											"type": "string"
										},
										{
											"key": "username",
											"value": "capricornia",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"title\" : \"Fifth issue\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "https://api.github.com/repos/dimosoftuni/postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"dimosoftuni",
										"postman",
										"issues"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Repos",
			"item": [
				{
					"name": "GET",
					"item": [
						{
							"name": "GET_All_Repos",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/dimosoftuni/postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"dimosoftuni",
										"postman",
										"issues"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET_Single_Repo",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Status code is 200\", function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});\r",
											"\r",
											"pm.test(\"Verify repo name\", function (){\r",
											"    const body = pm.response.json();\r",
											"    pm.expect(body.name, \"Property name\").equals(\"postman\");\r",
											"})"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/dimosoftuni/postman",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"dimosoftuni",
										"postman"
									]
								}
							},
							"response": []
						},
						{
							"name": "GET_All_Commits_From_Postman_Repo",
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.github.com/repos/dimosoftuni/postman/issues",
									"protocol": "https",
									"host": [
										"api",
										"github",
										"com"
									],
									"path": [
										"repos",
										"dimosoftuni",
										"postman",
										"issues"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}